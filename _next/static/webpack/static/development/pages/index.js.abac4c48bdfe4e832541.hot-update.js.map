{"version":3,"file":"static/webpack/static/development/pages/index.js.abac4c48bdfe4e832541.hot-update.js","sources":["webpack:///./components/Nav/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Link from 'next/link';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport './styles.scss';\n\nfunction DesktopNav() {\n\treturn <nav>\n\t\t<Link href=\"/\">\n\t\t\t<a>üè° Home</a>\n\t\t</Link>\n\t\t<span className=\"seperator\">|</span>\n\t\t<Link href=\"/notes\">\n\t\t\t<a>üìù Notes</a>\n\t\t</Link>\n\t\t<span className=\"seperator\">|</span>\n\t\t<Link href=\"/blogs\">\n\t\t\t<a>üîà Blogs</a>\n\t\t</Link>\n\t\t<span className=\"seperator\">|</span>\n\t\t<Link href=\"/projects\">\n\t\t\t<a>üìà Projects</a>\n\t\t</Link>\n\t\t<span className=\"seperator\">|</span>\n\t\t<Link href=\"/connect\">\n\t\t\t<a>üë• Connect</a>\n\t\t</Link>\n\t</nav>\n}\n\nfunction MobileNav() {\n\tconst [isMenuOpen, toggleMenuState] = useState(false);\n\treturn <div className=\"mobile-nav\">\n\t\t<div className=\"hamburger-icon\" onClick={() => toggleMenuState(!isMenuOpen)}>üçî</div>\n\t\t<nav className={`${isMenuOpen ? 'menu-open' : 'menu-closed'}`}>\n\t\t\t<Link href=\"/\">\n\t\t\t\t<a>üè° Home</a>\n\t\t\t</Link>\n\t\t\t<Link href=\"/notes\">\n\t\t\t\t<a>üìù Notes</a>\n\t\t\t</Link>\n\t\t\t<Link href=\"/blogs\">\n\t\t\t\t<a>üîà Blogs</a>\n\t\t\t</Link>\n\t\t\t<Link href=\"/projects\">\n\t\t\t\t<a>üìà Projects</a>\n\t\t\t</Link>\n\t\t\t<Link href=\"/connect\">\n\t\t\t\t<a>üë• Connect</a>\n\t\t\t</Link>\n\t\t</nav>\n\t</div>\n\n}\n\nfunction Nav() {\n\tconst isMobile = useMediaQuery(\n\t\t'only screen and (max-device-width: 480px)'\n\t)\n\treturn isMobile ? <MobileNav /> : <DesktopNav />\n}\n\nexport default Nav;\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}