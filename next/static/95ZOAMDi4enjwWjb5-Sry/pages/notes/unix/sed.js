(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{"4mXO":function(e,t,n){e.exports=n("7TPF")},"7TPF":function(e,t,n){n("AUvm"),e.exports=n("WEpk").Object.getOwnPropertySymbols},"7ljp":function(e,t,n){"use strict";n.d(t,"a",function(){return u}),n.d(t,"b",function(){return d});var a=n("q1tI"),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach(function(t){i(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),o=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"===typeof e?e(t):c({},t,{},e)),n},u=function(e){var t=o(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},m="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=Object(a.forwardRef)(function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=b(e,["components","mdxType","originalType","parentName"]),u=o(n),m=a,O=u["".concat(l,".").concat(m)]||u[m]||s[m]||i;return n?r.a.createElement(O,c({ref:t},p,{components:n})):r.a.createElement(O,c({ref:t},p))});function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var i=n.length,l=new Array(i);l[0]=O;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c[m]="string"===typeof e?e:a,l[1]=c;for(var p=2;p<i;p++)l[p]=n[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"},kOwS:function(e,t,n){"use strict";n.d(t,"a",function(){return i});var a=n("UXZV"),r=n.n(a);function i(){return(i=r.a||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}},qNsG:function(e,t,n){"use strict";var a=n("4mXO"),r=n.n(a),i=n("pLtp"),l=n.n(i);function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,r={},i=l()(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(r.a){var c=r()(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}n.d(t,"a",function(){return c})},t7W1:function(e,t,n){"use strict";n.r(t);var a=n("kOwS"),r=n("qNsG"),i=n("q1tI"),l=n.n(i),c=n("7ljp"),b=n("zG+e"),p=n("NpVS"),o=l.a.createElement,u={backgroundColor:"#dddddd",padding:"2px 5px",color:"#565656",borderRadius:"5px"},m={pre:function(e){return o("pre",e)},code:function(e){return o("code",Object(a.a)({},e,{style:u}))},inlineCode:function(e){return o("code",Object(a.a)({},e,{style:u}))}},s=function(e){var t=e.children;return o(c.a,{components:m},t)};n.d(t,"default",function(){return j});l.a.createElement;var O={},d=function(e){var t=e.children;return Object(c.b)(b.a,null,Object(c.b)(p.a,null,Object(c.b)(s,null,t)))};function j(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)(d,Object(a.a)({},O,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",null,"sed"),Object(c.b)("p",null,"GNU docs -> ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.gnu.org/software/sed/manual/sed.html"}),"https://www.gnu.org/software/sed/manual/sed.html")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Stand input = standard input stream, etc\u2026")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Used for basic transformation on streams")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},"type -a sed")," \ud83d\udc49 sed is command, it is stand alone utility and not a shell built in")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},"man sed")," \ud83d\udc49 to view documentation")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Substitute command ",Object(c.b)("inlineCode",{parentName:"p"},'sed "s/[search-pattern]/replacement-string/" [File to execute this command on]')),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"it does not alter the content of the file yet, it only send the output to STDout"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"case sensitive my default"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"i")," flag to ignore string, usage ",Object(c.b)("inlineCode",{parentName:"li"},"sed 's/search-pattern/replacement-string/i' [filename]")," - we also use capital ",Object(c.b)("inlineCode",{parentName:"li"},"I"),"."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"In case of multi line text it searches for text line by line and replaces its first match and then moves on"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"that is if there are two matches in a line it will replace only the first match")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},Object(c.b)("inlineCode",{parentName:"p"},"g")," - global replace to replace all the matches ",Object(c.b)("inlineCode",{parentName:"p"},"sed \u2019s/search-pattern/replacement-string/g' [filename]")," ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"If we want only a particular match to be replace we can use the number flag like 1, 2, 3\u2026etc")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"we can write to new file using the ",Object(c.b)("inlineCode",{parentName:"p"},">")," operation"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"-i"),": for inline editing. Append something to ",Object(c.b)("inlineCode",{parentName:"li"},"-i")," flag to create a backup file and replace inline for original file. Example: ",Object(c.b)("inlineCode",{parentName:"li"},"sed -i.bak 's/search-pattern/replacement-string/' [filename]")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Any character following the ",Object(c.b)("inlineCode",{parentName:"p"},"s")," can be used as delimiter "),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"ex: ",Object(c.b)("inlineCode",{parentName:"li"},"sed \u2019s#/home/json/#/something#"),"  , here ",Object(c.b)("inlineCode",{parentName:"li"},"#")," is used a delimiter."))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Delete the content using ",Object(c.b)("inlineCode",{parentName:"p"},"d")," command"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"to delete the line containing ",Object(c.b)("strong",{parentName:"li"},"this")," -  ",Object(c.b)("inlineCode",{parentName:"li"},"sed \u2018/this/d\u2019 [filename]")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Multiple sed "),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"seperate each with semicolon - ",Object(c.b)("inlineCode",{parentName:"p"},"sed \u2018/^#/d ; /^$/d' [filename]"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"using ",Object(c.b)("inlineCode",{parentName:"p"},"-e")," option one for each sed operation"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"sed -e \u2018/^#/d\u2019 -e \u2018/^$/d\u2019 [filename]")))))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"Run sed command from a file: (a file has all the sed commands we want to execute)"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},"Example scripts.sed file to be")))),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{}),"/^#/d\n/^$/d\n")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"We can run sed from this file using ",Object(c.b)("inlineCode",{parentName:"p"},"-f")," flag - ",Object(c.b)("inlineCode",{parentName:"p"},"sed -f script.sed [filename to execute sed on]"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("p",{parentName:"li"},"To execute only against single line in the file"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"sed \u20182 s/apahe/httpd/\u2018 [filename]"))))))}j.isMDXComponent=!0},zAig:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/notes/unix/sed",function(){return n("t7W1")}])}},[["zAig",1,0]]]);