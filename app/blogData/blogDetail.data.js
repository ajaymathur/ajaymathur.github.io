"use strict";
exports.BlogDetail = [{
        id: 1,
        heading: '$emit vs $broadcast',
        description: "\n<p><span keyword>$emit</span> and  <span keyword>$broadcast</span> are used to fire an event and  <span keyword>$on</span>\nis used to capture the event and thus execute some functionality.</p>\n<p>When used on <b>scope</b>:</p>\n\n<ul>\n    <li><b>$broadcast</b> : Dispatches the event downwards to all the child scopes.</li>\n    <li><b>$emit</b> : Dispatches the event upwards to all the parent scope in hierachy</li>\n</ul>\n<p>P.S : This essentially means it these are not dispatched to the sibling scope that is two scope with same immidiate parent scope.</p>\n<pre>\n    <code>\n    // Dispatching the event upwards\n    $scope.$emit(\"event:emit\",'data emitted');\n\n    //Dispatching the event downwards\n    $scope.$broadcast(\"event:broadcast\",\"data broadcasted\");\n\n    // capturing event using $on\n    $scope.$on(\"event:emit\",function(event,data){\n        console.log(data);   //data emitted\n    })\n    $scope.$on(\"event:broadcast\",function(event,data){\n        console.log(data);   //data broadcasted\n    })\n    </code>\n</pre>\n<p>When used on <b>$rootscope</b>:</p>\n<ul>\n    <li><b>$broadcast</b> : Dispatches the event to all the $rootscope.$on, as well as to all the $scope.$on listeners.</li>\n    <li><b>$emit</b> : It is supposed to dispatch the event up in the scope heriarchy but since there is no $parent to $rootscope there\n    is question of dispatching event upwards, so $emit will fire all $rootscope.$event listeners.</li>\n</ul>\n    ",
        tags: ["angular2"]
    }];
//# sourceMappingURL=blogDetail.data.js.map